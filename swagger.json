{
  "openapi": "3.0.1",
  "info": {
    "version": "0.0.1",
    "title": "Api-delivery",
    "description": "",
    "license": {
      "name": "Swagger UI Express Documentation",
      "url": "https://www.npmjs.com/package/swagger-ui-express"
    }
    },"consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json", "multipart/form-data"],
  "servers": [{ "url": "https://your-delivery-by-sayshn.onrender.com" }, { "url": "http://localhost:8080" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Categories",
      "description": "Categories endpoints"
    },
    {
      "name": "Orders",
      "description": "Endpoints for user's orders"
    },
    {
      "name": "Products",
      "description": "Products endpoints"
    }

  ],
  "paths": {
    "/api/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register new user",
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "409": {
            "description": "Email in use"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Log in a user",
        "requestBody": {
          "description": "Log in existing user",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Email or password is wrong"
          }
        }
      }
    },
   
    "/api/user/current": {
      "get": {
        "tags": ["User"],
        "summary": "Get current user",
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "Current user retrieved successfully",
            "content": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCurrentUserResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "Log out of the current user",
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "User logged out successfully"
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },

    
    "/api/user/orders": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Update info about user's orders",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token",
            "required": true,
            "schema": {
              "type": "Object"
            }
          }
        
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchOrdersResponse"
                }
              }
            }
          },

          "400": {
            "description": "The user is not updated",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "User has no access to update the order",
            "content": {}
          },
          "404": {
            "description": "The order is not found",
            "content": {}
          }
        }
      }
    },
        "/user/orders": {
      "get": {
        "tags": ["Orders"],
        "summary": "Our Orders",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token",
            "required": true,
            "schema": {
              "type": "Array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrdersResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["username", "email", "password"],
        "properties": {
          "username": {
            "type": "string",
            "description": "User's name",
            "example": "John Smith"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "Test1234"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "Access token for the logged-in user"
          },
          "refreshToken": {
            "type": "string",
            "description": "Refresh token for the logged-in user"
          },
          "user": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "description": "User's name",
                "example": "John Smith"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              }
            }
          }
        }
      },
      
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "Access token for the logged-in user"
          },
          "refreshToken": {
            "type": "string",
            "description": "Refresh token for the logged-in user"
          },
          "user": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "description": "User's name",
                "example": "John Smith"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              }
            }
          }
        }
      },
      "GetCurrentUserResponse": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "The username of the current user"
          },
          "email": {
            "type": "string",
            "description": "The email of the current user"
          }
        }
      },

      "SearchNoticesResponse": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetNoticeResponse"
            },
            "description": "List of notices matching the search query"
          },
          "totalResults": {
            "type": "integer",
            "description": "Total number of results matching the search query"
          }
        }
      },
      "GetNewsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Article's id from DB"
            },
            "imgUrl": {
              "type": "string",
              "description": "Article's Image"
            },
            "title": {
              "type": "string",
              "description": "Title"
            },
            "text": {
              "type": "string",
              "description": "Text"
            },
            "date": {
              "type": "string",
              "description": "Release Date"
            },
            "url": {
              "type": "string",
              "description": "Link"
            },
            "id": {
              "type": "string",
              "description": "Article's id from source"
            }
          }
        },
        "example": [
          {
            "_id": "645cdf279f3f111d137d54e8",
            "imgUrl": "https://www.nytimes.com/images/2023/04/16/magazine/16mag-LOR/16mag-LOR-blog480.jpg",
            "title": "What I Learned Dogsitting for New York City’s Opulent Elite",
            "text": "In a city of yawning class inequality, some side hustles let you glimpse how the other half lives.",
            "date": "2023-04-11T09:00:18+0000",
            "url": "https://www.nytimes.com/2023/04/11/magazine/dogsitting-rich-new-york.html",
            "id": "nyt://article/8d29f1fc-d146-509d-8ceb-5a5b17d7886b"
          },
          {
            "_id": "645cdf279f3f111d137d54e9",
            "imgUrl": "https://www.nytimes.com/images/2023/04/04/multimedia/00VIRTUAL-VETS-01b-fmzk/00VIRTUAL-VETS-01b-fmzk-blog480.jpg",
            "title": "The Virtual Vet Will See You Meow",
            "text": "Veterinary telemedicine could help more pet owners access much-needed care and put anxious animals at ease, but challenges remain.",
            "date": "2023-04-07T09:00:46+0000",
            "url": "https://www.nytimes.com/2023/04/07/health/vet-pet-health-telemedicine.html",
            "id": "nyt://article/992f2f7f-793c-5553-b722-348625f53a4b"
          }
        ]
      },
      "GetFriendsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Friends id from DB"
            },
            "title": {
              "type": "string",
              "description": "Friend's Name"
            },
            "url": {
              "type": "string",
              "description": "WebSite URL"
            },
            "addressUrl": {
              "type": "string",
              "description": "Google Map Location URL"
            },
            "imageUrl": {
              "type": "string",
              "description": "Logo"
            },
            "address": {
              "type": "string",
              "description": "Address"
            },
            "workDays": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "isOpen": {
                    "type": "boolean",
                    "description": "Work/Weekend"
                  },
                  "from": {
                    "type": "string",
                    "description": "Start work time"
                  },
                  "to": {
                    "type": "string",
                    "description": "End work time"
                  }
                }
              }
            },
            "phone": {
              "type": "string",
              "description": "Phone number"
            },
            "email": {
              "type": "string",
              "description": "Email"
            }
          }
        },
        "example": [
          {
            "_id": "645cdc949f3f111d137d54de",
            "title": "Happy Paw",
            "url": "https://happypaw.ua/ua",
            "addressUrl": "https://goo.gl/maps/3RyzTYBvMr9WQWCC6",
            "imageUrl": "https://storage.googleapis.com/kidslikev2_bucket/pets-support/images/sponsors/frame_288.png",
            "address": "Київ, вулиця Шота Руставелі, 44 (3-й поверх, офіс 7)",
            "workDays": [
              {
                "isOpen": true,
                "from": "09:00",
                "to": "17:00"
              },
              {
                "isOpen": true,
                "from": "09:00",
                "to": "17:00"
              },
              {
                "isOpen": true,
                "from": "09:00",
                "to": "17:00"
              },
              {
                "isOpen": true,
                "from": "09:00",
                "to": "17:00"
              },
              {
                "isOpen": true,
                "from": "09:00",
                "to": "17:00"
              },
              {
                "isOpen": true,
                "from": "09:00",
                "to": "17:00"
              },
              {
                "isOpen": true,
                "from": "09:00",
                "to": "17:00"
              }
            ],
            "phone": "+380442900329",
            "email": "hello@happypaw.ua"
          },
          {
            "_id": "645cdc949f3f111d137d54df",
            "title": "Харківський міський притулок для тварин",
            "url": "https://www.city.kharkov.ua/uk/news/-51132.html",
            "addressUrl": "https://goo.gl/maps/gjMzx3ifaRgXSftP9",
            "imageUrl": null,
            "address": "м. Харків, вул. Квітки-Основ'яненка, 7, 2-й пов.",
            "workDays": null,
            "phone": "+380577607961",
            "email": "press@citynet.kharkov.ua"
          }
        ]
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}



